classdef Elliptical_nucleus_model <SimuCell_Object_Model
    %  Elliptical_nucleus_model -An Elliptical Model of Nucleus
    %  Elliptical_nucleus_model generates a nucleus that is roughly elliptical
    %  in shape. The radius, eccentricity and degree of randomness are
    %  specifiable.
    properties
        radius;
        eccentricity;
        randomness;
        description='An Elliptical Model of Nucleus';
        
    end
    
    
    
    methods

        %The constructor needs to have the definitions of all the Parameter variables
        %declared as properties. Initial pre-processing, that one does not wish
        %to repeat every time the shape is generated can also be performed
        %here, potentially using a listener to make sure that all the
        %Parameters have been set (see SLML_nucleus_model)
        function obj=Elliptical_nucleus_model()
            obj.radius=Parameter('Nuclear Radius',15,SimuCell_Class_Type.number,...
                [1,Inf],'Average Cell Radius');
            obj.eccentricity=Parameter('Nuclear Eccentricity',0.5,SimuCell_Class_Type.number,...
                [0,1],'Measure of Non-Uniformity: 0=spherical, 1=straight line');
            obj.randomness=Parameter('Extent of Variation',0.1,SimuCell_Class_Type.number,...
                [0,1],'Measure of Non-Uniformity: 0=elliptical,1= random');
        end
        
        % The output_shape function needs to generate output_shape, a binary mask (size of the output image)
        % of the shape being generated. This function is called by the engine
        % and will always have the same parameters passed to it:
        % pos - a 1x2 matrix, containing the x and y position generated by the placement function
        % current_image_mask - a binary  mask of the same size as the final image showing the cells that have already been rendered
        % prerendered_shapes - a cell array containing the shapes required (as specified in the prerendered_object_list). Each shape is described by binary mask of the same size as the final image and the masks are in the same order as specified in prerendered_object_list
        % It is up to the person writing a plugin which part of this
        % information they want to use.
        function output_shape=make_shape(obj,pos,current_image_mask,prerendered_shapes)
           x=pos(1);y=pos(2);
           intermediate_shape=elliptical_shape(obj.radius.value,obj.eccentricity.value,obj.randomness.value);
           output_shape=false(size(current_image_mask));
           shape_size=size(intermediate_shape);
           output_shape(x-floor(shape_size(1)/2-0.5):x-floor(shape_size(1)/2-0.5)+shape_size(1)-1,...
               y-floor(shape_size(2)/2-0.5):y-floor(shape_size(2)/2-0.5)+shape_size(2)-1)=logical(intermediate_shape);
        end
        
        % This function contains the list of shapes (within the cell being
        % rendered), specified as a cell array, that is required to render the present shape using the
        % output_shape function.  The cell elements are of type
        % SimuCell_Object, and should be passed to the function by a user
        % through one of the Parameters.
        function pre_obj_list=prerendered_object_list(obj)
             pre_obj_list=cell(0);
        end    
    end
    
  
    
end
